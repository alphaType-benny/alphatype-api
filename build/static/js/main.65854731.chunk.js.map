{"version":3,"sources":["components/LetterInput.js","components/Header.js","services/results.js","services/users.js","components/Notification.js","components/Timer.js","components/Leaderboard.js","components/UserCard.js","services/login.js","components/Login.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["timerInterval","Header","user","padding","className","style","baseUrl","token","allResults","a","axios","get","req","data","saveScore","score","config","headers","Authorization","post","response","resultsService","setToken","newToken","getAll","usersService","signUp","body","then","Notification","notifClass","notifMessage","Alert","variant","Timer","start","now","localScore","liveScore","toFixed","totalKeyPress","LetterInput","setTotalTime","useState","setStart","setNow","setLocalScore","alphabet","alphaWithIdx","forEach","idx","concat","alphaRow1","slice","alphaRow2","useEffect","restart","escKey","e","preventDefault","key","code","changeBgColor","color","document","getElementsByClassName","backgroundColor","spellCheck","id","letter","value","Date","setInterval","varNow","addEventListener","toUpperCase","length","clearInterval","getElementById","removeAttribute","focus","i","disabled","removeEventListener","inputField","alpha","map","type","maxLength","onChange","target","onKeyDown","width","textAlign","autoComplete","Button","size","onClick","sortResults","scores","sort","b","totalTime","Leaderboard","usersTopScore","setUsersTopScore","allUsers","showTop10","setShowTop10","topScores","u","userScore","results","userData","username","scoreToShow","buttonDisplay","extraPadding","paddingTop","p","minWidth","textDecoration","fontColor","UserCard","logout","userTopScore","find","rankDisplay","personalBest","gamesPlayed","undefined","rank","findIndex","Badge","pill","bg","text","margin","userLogin","credentials","request","res","loginService","Login","setUser","notification","setUsername","password","setPassword","newUser","setNewUser","handleLogin","event","window","localStorage","setItem","JSON","stringify","inputTitle","promptText","promptOption","onSubmit","name","MainContainer","setAllUsers","setNotifClass","setNotifMessage","loggedUserJSON","getItem","parse","removeItem","setTimeout","Footer","App","Body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.65854731.chunk.js","sourcesContent":["\r\nimport React, {useState, useEffect} from \"react\"\r\nimport Timer from \"./Timer\"\r\nimport resultsService from \"../services/results\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet timerInterval\r\nlet totalKeyPress = 0\r\n\r\nconst LetterInput = ({user, setTotalTime}) =>{\r\n  const [start, setStart] = useState(\"\")\r\n  const [now, setNow] = useState(\"\")\r\n  const [localScore, setLocalScore] = useState(\"\")\r\n\r\n  const alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m',\r\n  'n','o','p','q','r','s','t','u','v','w','x','y','z']\r\n\r\n  let alphaWithIdx = []\r\n  alphabet.forEach((a,idx)=>{alphaWithIdx=alphaWithIdx.concat({a,idx})})\r\n\r\n  const alphaRow1 = alphaWithIdx.slice(0,13)\r\n  const alphaRow2 = alphaWithIdx.slice(13)\r\n\r\n  useEffect(() => {\r\n    restart()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user])\r\n\r\n  const escKey = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(e.key === \"Escape\" || e.code === \"Space\"){\r\n      restart()\r\n    }\r\n  }\r\n\r\n  const changeBgColor = (color) => document.getElementsByClassName(\"ctr-display\")[0].style.backgroundColor = color;\r\n\r\n  const spellCheck = async (id, letter, value) =>{\r\n    if(value !== \" \"){\r\n      if (!start){\r\n        setStart(Date.now())\r\n      }\r\n\r\n      if (letter === \"a\"){\r\n        timerInterval = setInterval(() => {\r\n          let varNow = Date.now()\r\n          setNow(varNow)\r\n        }, 1);\r\n\r\n        document.addEventListener('keyup', escKey)\r\n      }\r\n\r\n      if (value.toUpperCase() === letter.toUpperCase()) {\r\n        \r\n        changeBgColor(null)\r\n\r\n        if(letter === \"z\" && totalKeyPress >= alphabet.length){\r\n          const score = (now-start)/1000\r\n          clearInterval(timerInterval)\r\n          await setLocalScore(score)\r\n          await resultsService.saveScore(score)\r\n          setTotalTime(score)\r\n        }\r\n        else if(letter === \"z\" && totalKeyPress < alphabet.length){\r\n          restart()\r\n        }\r\n        else{\r\n          document.getElementById(id+1).removeAttribute(\"disabled\")\r\n          document.getElementById(id+1).focus()\r\n        }\r\n      }\r\n      else{\r\n        changeBgColor(\"red\")\r\n      }\r\n    }\r\n    else{restart()}\r\n  }\r\n\r\n  const restart = () => {\r\n\r\n    for(let i=0; i<alphabet.length; i++){\r\n      const disabled = i !== 0 ? \"disabled\" : \"\"\r\n      document.getElementById(i).disabled = disabled\r\n      document.getElementById(i).value = \"\"\r\n    }\r\n\r\n    setStart(\"\")\r\n    setNow(\"\")\r\n    setLocalScore(\"\")\r\n    setTotalTime(\"\")\r\n    totalKeyPress = 0\r\n\r\n    changeBgColor(null)\r\n    document.getElementById(0).focus()\r\n    document.removeEventListener('keyup', escKey)\r\n  }\r\n\r\n  const inputField = (alpha) => {\r\n    \r\n    return(\r\n      <div className=\"letterInput\">\r\n        {alpha.map(a => {\r\n          return (\r\n              <span key={a.idx}>\r\n                <label><b>&nbsp;{a.a}&nbsp;</b></label>\r\n                <input\r\n                    disabled={a.idx !== 0 ? \"disabled\" : \"\"}\r\n                    type=\"text\"\r\n                    id={a.idx}\r\n                    maxLength=\"1\"\r\n                    onChange={(e)=>spellCheck(a.idx, a.a, e.target.value)}\r\n                    onKeyDown={()=>totalKeyPress += 1}\r\n                    style={{width: \"20px\", textAlign:\"center\"}}\r\n                    autoComplete=\"off\"\r\n                />\r\n              </span>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Timer\r\n        now={now}\r\n        start={start}\r\n        localScore = {localScore}\r\n      />\r\n      <br/>\r\n      {inputField(alphaRow1)}\r\n      {inputField(alphaRow2)}\r\n      <br/>\r\n      <Button variant=\"secondary\" size=\"sm\" onClick={()=>restart()}>Restart (Space Key)</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LetterInput","\r\nconst Header = ({user}) => {\r\n\r\n    const padding = user ? \"20px\" : \"10px\"\r\n\r\n    return(\r\n        <div className=\"header\" style={{padding: padding}}>\r\n            <h1 className=\"gameTitle\">alphaType</h1>\r\n            {user ? \"\" : \"A Typing Game\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/results'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n  }\r\n\r\nconst allResults = async () => {\r\n    const req = await axios.get(baseUrl)\r\n\r\n    return req.data\r\n}\r\n\r\nconst saveScore = async (score) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    // const scoreString = JSON.stringify(score)\r\n    \r\n    const response = await axios.post(baseUrl, {score}, config)\r\n    \r\n    return response.data\r\n}\r\n\r\nconst resultsService = {allResults, setToken, saveScore}\r\n\r\nexport default resultsService","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return (response.data)\r\n}\r\n\r\nconst signUp = (body) => {\r\n    const request = axios.post(baseUrl, body)\r\n    return request.then(response => (response.data))\r\n}\r\n\r\nconst usersService = {getAll, signUp}\r\n  \r\nexport default usersService\r\n","\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notification = ({notifClass, notifMessage}) =>{\r\n    if (notifMessage === null){\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <Alert variant={notifClass} style={{padding: \"6px\"}}>\r\n          {notifMessage}\r\n        </Alert>\r\n\r\n      )\r\n}\r\n\r\nexport default Notification","\r\nconst Timer = ({start, now, localScore}) => {\r\n  const liveScore = (now-start)/1000\r\n\r\n  const timerState = () =>{\r\n\r\n    if (!start){\r\n      return <h3>Timer starts when typing begins</h3>\r\n    }\r\n    else if (!localScore){\r\n      return <h3><b>Timer:</b> {liveScore.toFixed(3)}s</h3>\r\n    }\r\n\r\n    return(\r\n      <h3>\r\n        <b>Your alphaTime is: </b> \r\n        {localScore <= 0 ? \"Invalid Result\" : `${localScore.toFixed(3)}s !`}\r\n      </h3>\r\n    )\r\n  }\r\n  \r\n  return(\r\n    <div className=\"timer\">\r\n      {timerState()}\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\nexport default Timer ","\r\nimport React, {useState, useEffect} from \"react\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst sortResults = (scores) => {  \r\n    return (scores.sort((b, a) => {\r\n        return b.totalTime - a.totalTime;\r\n    }))\r\n}\r\n\r\nconst Leaderboard =  ({usersTopScore, setUsersTopScore, allUsers}) => {\r\n  const [showTop10, setShowTop10] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let topScores = []\r\n\r\n    if(allUsers.length!==0){\r\n      allUsers.forEach(u => {\r\n        let userScore = \"No Score\"\r\n        if(u.results.length !== 0){\r\n            userScore = sortResults(u.results)[0].totalTime\r\n            const userData = {\"username\": u.username, \"totalTime\": userScore }\r\n            topScores = topScores.concat(userData)\r\n        }\r\n      })\r\n      setUsersTopScore(sortResults(topScores))\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allUsers])\r\n\r\n  const scoreToShow = showTop10 ? 10 : 5 \r\n  const buttonDisplay = showTop10 ? \"Show Less\" : \"Show More\"\r\n  const extraPadding = showTop10 ? \"0\" : \"20px\"\r\n\r\n  const topUsers = () => {\r\n\r\n    return(\r\n      (usersTopScore.slice(0,scoreToShow)).map((p, idx) => {\r\n        return(\r\n          <tr key={idx}>\r\n            <td style={{minWidth: \"25px\", textAlign:\"right\"}}>{idx+1}-</td>\r\n            <td style={{minWidth: \"140px\"}}>{p.username}&nbsp;</td>\r\n            <td>{p.totalTime}s</td>\r\n          </tr>\r\n        )\r\n      })\r\n    )\r\n  }\r\n \r\n  return(\r\n    <div>\r\n      <h3 style={{paddingTop:extraPadding}}><u>Leaderboard</u></h3>\r\n      <table className=\"leaderboard\">\r\n      <tbody style={{textAlign: \"left\"}}>\r\n        <tr>\r\n          <th></th>\r\n          <th>User</th>\r\n          <th>Time</th>\r\n        </tr>\r\n        {topUsers()}\r\n      </tbody>\r\n        \r\n      </table>\r\n      <Button variant=\"link\" size=\"sm\" style={{textDecoration:\"none\", fontColor:\"black\"}} onClick={()=>setShowTop10(!showTop10)}>\r\n        {buttonDisplay}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard","\r\nimport React from \"react\"\r\nimport Button from 'react-bootstrap/Button'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst UserCard = ({user, allUsers, usersTopScore, logout}) => {\r\n    \r\n    const userTopScore = usersTopScore.find(u=>u.username === user.username)\r\n    const userData = allUsers.find(u=>u.username === user.username)\r\n    let rankDisplay = \"No Rank\"\r\n    let personalBest = \"No Game Played\"\r\n    let gamesPlayed = \"0\"\r\n    \r\n    if (userTopScore !== undefined){\r\n        if(userTopScore.totalTime !== null){\r\n            const rank = 1 + usersTopScore.findIndex(u=>u.username === user.username)\r\n            rankDisplay = rank === 1 ? <Badge pill bg=\"warning\" text=\"dark\">Champ 🏆</Badge> : `Ranking: ${rank}`\r\n            personalBest = usersTopScore.length === 0 ? null : `${userTopScore.totalTime}s`\r\n            gamesPlayed = userData.results.length\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3 style={{margin:0}}>Welcome, {user.username}</h3>\r\n            <p> {rankDisplay}</p>\r\n            <table className=\"userStats\">\r\n                <tbody style={{textAlign: \"left\"}}>\r\n                    <tr>\r\n                        <td style={{minWidth: \"120px\"}}>Personal Best:</td>\r\n                        <td>{personalBest}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Games played:</td>\r\n                        <td>{gamesPlayed}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <br/>\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={()=>logout()}>Logout</Button>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default UserCard","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst userLogin = async (credentials) => {\r\n\r\n    const request = axios.post(baseUrl, credentials)\r\n    const res = await request\r\n    return res.data\r\n\r\n}\r\n\r\nconst loginService = {userLogin}\r\n\r\nexport default loginService","\r\nimport React, {useState} from 'react'\r\nimport loginService from \"../services/login\"\r\nimport resultsService from \"../services/results\"\r\nimport usersService from \"../services/users\"\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Login = ({setUser, notification}) =>{\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [newUser, setNewUser] = useState(false)\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        if(newUser){\r\n            try {\r\n                await usersService.signUp({username, password})\r\n            }\r\n            catch (exception){\r\n                notification(\"danger\", <div>\r\n                Invalid Credentials\r\n                <br/>\r\n                Username must be unique and have 3-12 characters\r\n                <br/>\r\n                Password must have at least 3 characters\r\n                </div>)\r\n                setPassword('')\r\n                return\r\n            }\r\n        }\r\n\r\n        try {\r\n            const user = await loginService.userLogin({username, password})\r\n            window.localStorage.setItem('loggedAppUser', JSON.stringify(user))\r\n\r\n            resultsService.setToken(user.token)\r\n            setUsername('')\r\n            setPassword('')\r\n            setUser(user)\r\n            notification(\"success\", `Welcome ${user.username} & Happy alphaTyping!`)\r\n          } catch (exception) {\r\n            setPassword('')\r\n            notification(\"danger\", \"Wrong/Invalid Credentials\")\r\n          }\r\n    }\r\n\r\n    const inputTitle = newUser === false ? \"Login to Play\" : \"Create Account\"\r\n    const promptText = newUser === false ? \"New User?\" : \"Existing User?\"\r\n    const promptOption = newUser !== false ? \"Login\" : \"Sign Up\"\r\n\r\n    const switchInput = () => {\r\n        setNewUser(!newUser)\r\n        setUsername('')\r\n        setPassword('')\r\n    } \r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <div className=\"loginDisplay\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h3>{inputTitle}</h3>\r\n                    <br/>\r\n                    <div className=\"loginField\">\r\n                    Username:&nbsp;\r\n                        <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        name=\"Username\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setUsername(target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"loginField\">\r\n                    Password:&nbsp;\r\n                        <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                    </div>\r\n                    <br/>\r\n                    <Button variant=\"secondary\" type=\"submit\">Submit</Button>\r\n                </form>\r\n                <br/>\r\n                <div className=\"toggleLoginSignUp\">\r\n                    <div>{promptText}</div>\r\n                    <Button variant=\"link\" style={{paddingTop: '0'}} onClick={switchInput}>{promptOption}</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","\r\nimport React, {useState, useEffect} from \"react\"\r\nimport resultsService from \"../services/results\"\r\nimport usersService from \"../services/users\";\r\nimport Notification from \"./Notification\"\r\nimport LetterInput from \"./LetterInput\"\r\nimport Leaderboard from \"./Leaderboard\"\r\nimport UserCard from \"./UserCard\"\r\nimport Login from \"./Login\"\r\n\r\nconst MainContainer = ({user, setUser}) => {\r\n    \r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [usersTopScore, setUsersTopScore ] = useState([])\r\n    const [totalTime, setTotalTime] = useState(\"\")\r\n    const [notifClass, setNotifClass] = useState('')\r\n    const [notifMessage, setNotifMessage] = useState('')\r\n    \r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n        if (loggedUserJSON) {\r\n          const user = JSON.parse(loggedUserJSON)\r\n          setUser(user)\r\n          resultsService.setToken(user.token)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        usersService.getAll()\r\n          .then(res => setAllUsers(res))\r\n    },[totalTime])\r\n\r\n    const notification = (notifClass, notifMessage) => {\r\n        setNotifClass(notifClass)\r\n        setNotifMessage(notifMessage)\r\n        setTimeout(() => {\r\n            setNotifMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser(null)\r\n        return window.localStorage.removeItem('loggedAppUser')\r\n    }\r\n\r\n    const loggedInDisplay = () => {\r\n        return(\r\n          <div className = \"mainContainer\">\r\n            <div className=\"left-display\">\r\n                <UserCard\r\n                    user = {user}\r\n                    allUsers = {allUsers}\r\n                    usersTopScore = {usersTopScore}\r\n                    logout = {logout}\r\n                />\r\n            </div>\r\n            <div className=\"ctr-display\">\r\n                <LetterInput\r\n                    user = {user}\r\n                    totalTime = {totalTime}\r\n                    setTotalTime = {setTotalTime}\r\n                /> \r\n            </div>\r\n            <div className = \"right-display\">\r\n                <Leaderboard\r\n                    totalTime = {totalTime}\r\n                    usersTopScore = {usersTopScore}\r\n                    setUsersTopScore = {setUsersTopScore}\r\n                    allUsers = {allUsers}\r\n                />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"notifFlex\">\r\n                <Notification\r\n                    notifClass={notifClass}\r\n                    notifMessage={notifMessage}\r\n                />\r\n            </div>\r\n            \r\n            {\r\n                user ?\r\n                loggedInDisplay()\r\n                :\r\n                <Login\r\n                    user={user}\r\n                    setUser = {setUser}\r\n                    notification={notification}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContainer","\r\nconst Footer = () => {\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <small>\r\n                Copyright &copy; 2021 Benny Luo\r\n            </small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","\r\n//State Management (Redux)\r\n//Multi-view (i.e. About Page)\r\n//Testing (Cypress?)\r\n\r\nimport React, {useState} from 'react'\r\nimport Header from \"./components/Header\"\r\nimport Body from \"./components/Body\"\r\nimport Footer from \"./components/Footer\"\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(\"\")\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      <Header user={user} />\r\n      <Body user={user} setUser={setUser} />\r\n      <Footer/>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}