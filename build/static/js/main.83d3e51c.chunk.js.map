{"version":3,"sources":["components/LetterInput.js","services/results.js","services/users.js","components/Notification.js","components/Timer.js","components/Leaderboard.js","components/UserCard.js","services/login.js","components/Login.js","components/MainContainer.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["timerInterval","baseUrl","token","allResults","a","axios","get","req","data","saveScore","score","config","headers","Authorization","post","response","resultsService","setToken","newToken","getAll","usersService","signUp","body","then","Notification","notifClass","notifMessage","Alert","variant","style","padding","Timer","start","now","localScore","liveScore","className","toFixed","totalMatch","LetterInput","user","setTotalTime","setLocalScore","useState","setStart","setNow","alphabet","alphaWithIdx","map","idx","concat","alphaRow1","slice","alphaRow2","useEffect","restart","escKey","e","preventDefault","key","changeBgColor","color","document","getElementsByClassName","backgroundColor","spellCheck","id","letter","value","Date","setInterval","varNow","addEventListener","length","clearInterval","getElementById","removeAttribute","focus","disabled","removeEventListener","inputField","alpha","type","maxLength","onChange","target","width","textAlign","autoComplete","Button","size","onClick","sortResults","scores","sort","b","totalTime","Leaderboard","topPlayers","setTopPlayers","allUsers","usersTopScore","u","userScore","results","userData","username","p","minWidth","UserCard","logout","userTopScore","find","rank","personalBest","gamesPlayed","undefined","findIndex","margin","userLogin","credentials","request","res","loginService","Login","setUser","notification","setUsername","password","setPassword","newUser","setNewUser","handleLogin","event","window","localStorage","setItem","JSON","stringify","inputTitle","promptText","promptOption","onSubmit","name","paddingTop","MainContainer","setAllUsers","setNotifClass","setNotifMessage","loggedUserJSON","getItem","parse","removeItem","setTimeout","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4JAMIA,E,wFCJEC,EAAU,eAEZC,EAAQ,KAMNC,EAAU,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IAAIL,GADb,cACTM,EADS,yBAGRA,EAAIC,MAHI,2CAAH,qDAMVC,EAAS,uCAAG,WAAOC,GAAP,iBAAAN,EAAA,6DACRO,EAAS,CACXC,QAAS,CAAEC,cAAeX,IAFhB,SAOSG,IAAMS,KAAKb,EAAS,CAACS,SAAQC,GAPtC,cAORI,EAPQ,yBASPA,EAASP,MATF,2CAAH,sDAcAQ,EAFQ,CAACb,aAAYc,SAtBnB,SAAAC,GACbhB,EAAK,iBAAagB,IAqBwBT,aCzBxCR,EAAU,aAEVkB,EAAM,uCAAG,4BAAAf,EAAA,sEACYC,IAAMC,IAAIL,GADtB,cACLc,EADK,yBAEHA,EAASP,MAFN,2CAAH,qDAYGY,EAFM,CAACD,SAAQE,OALf,SAACC,GAEZ,OADgBjB,IAAMS,KAAKb,EAASqB,GACrBC,MAAK,SAAAR,GAAQ,OAAKA,EAASP,U,eCI/BgB,EAbM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,aAC/B,OAAqB,OAAjBA,EACO,KAIP,cAACC,EAAA,EAAD,CAAOC,QAASH,EAAYI,MAAO,CAACC,QAAS,OAA7C,SACGJ,KCYIK,EArBD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,WACpBC,GAAaF,EAAID,GAAO,IAY9B,OACE,qBAAKI,UAAU,QAAf,SAVKJ,EAGKE,EAGH,+BAAI,mDAAJ,IAA+BA,EAA/B,SAFE,+BAAI,uCAAJ,IAAmBC,EAAUE,QAAQ,GAArC,OAHA,mE,QJGTC,EAAa,EA0HFC,EAxHK,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,aAAcP,EAA8B,EAA9BA,WAAYQ,EAAkB,EAAlBA,cACpD,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAsBD,mBAAS,IAA/B,mBAAOV,EAAP,KAAYY,EAAZ,KAEMC,EAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAClE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAE5CC,EAAe,GACnBD,EAASE,KAAI,SAAC5C,EAAE6C,GAAOF,EAAaA,EAAaG,OAAO,CAAC9C,IAAE6C,WAE3D,IAAME,EAAYJ,EAAaK,MAAM,EAAE,IACjCC,EAAYN,EAAaK,MAAM,IAErCE,qBAAU,kBAAMC,MAAW,CAACf,IAE5B,IAAMgB,EAAS,SAACC,GACdA,EAAEC,iBAEW,WAAVD,EAAEE,KACHJ,KAIEK,EAAgB,SAACC,GAAD,OAAWC,SAASC,uBAAuB,eAAe,GAAGlC,MAAMmC,gBAAkBH,GAErGI,EAAU,uCAAG,WAAOC,EAAIC,EAAQC,GAAnB,eAAAhE,EAAA,yDAEZ4B,GACHY,EAASyB,KAAKpC,OAGD,MAAXkC,IACFnE,EAAgBsE,aAAY,WAC1B,IAAIC,EAASF,KAAKpC,MAClBY,EAAO0B,KACN,GAEHT,SAASU,iBAAiB,QAAShB,IAGjCY,IAAUD,EAfG,oBAgBf7B,GAAc,EACdsB,EAAc,MAEA,MAAXO,GAAkB7B,IAAeQ,EAAS2B,OAnB9B,wBAoBP/D,GAASuB,EAAID,GAAO,IAC1B0C,cAAc1E,GArBD,UAsBP0C,EAAchC,GAtBP,yBAuBPM,EAAeP,UAAUC,GAvBlB,QAwBb+B,EAAa/B,GAxBA,wBA2BboD,SAASa,eAAeT,EAAG,GAAGU,gBAAgB,YAC9Cd,SAASa,eAAeT,EAAG,GAAGW,QA5BjB,gCAgCfjB,EAAc,OAhCC,4CAAH,0DAoCVL,EAAU,WAEd,IAAI,IAAIN,EAAI,EAAGA,EAAIH,EAAS2B,OAAQxB,IAAM,CACxC,IAAM6B,EAAmB,IAAR7B,EAAY,WAAa,GAC1Ca,SAASa,eAAe1B,GAAK6B,SAAWA,EACxChB,SAASa,eAAe1B,GAAKmB,MAAQ,GAGvC9B,EAAa,EACbM,EAAS,IACTC,EAAO,IACPH,EAAc,IACdD,EAAa,IAEbmB,EAAc,MACdE,SAASa,eAAe,GAAGE,QAC3Bf,SAASiB,oBAAoB,QAASvB,IAGlCwB,EAAa,SAACC,GAElB,OACE,qBAAK7C,UAAU,cAAf,SACG6C,EAAMjC,KAAI,SAAA5C,GACT,OACI,iCACA,gCAAO,qCAAUA,EAAEA,EAAZ,YACP,uBACI0E,SAAoB,IAAV1E,EAAE6C,IAAY,WAAa,GACrCiC,KAAK,OACLhB,GAAI9D,EAAE6C,IACNkC,UAAU,IACVC,SAAU,SAAC3B,GAAD,OAAKQ,EAAW7D,EAAE6C,IAAK7C,EAAEA,EAAGqD,EAAE4B,OAAOjB,QAC/CvC,MAAO,CAACyD,MAAO,OAAQC,UAAU,UACjCC,aAAa,UATNpF,EAAE6C,WAkBzB,OACE,gCACE,cAAC,EAAD,CACEhB,IAAKA,EACLD,MAAOA,EACPE,WAAcA,IAEhB,uBACC8C,EAAW7B,GACX6B,EAAW3B,GACZ,uBACA,cAACoC,EAAA,EAAD,CAAQ7D,QAAQ,YAAY8D,KAAK,KAAKC,QAAS,kBAAIpC,KAAnD,mCK3HAqC,EAAc,SAACC,GACjB,OAAQA,EAAOC,MAAK,SAACC,EAAG3F,GACpB,OAAO2F,EAAEC,UAAY5F,EAAE4F,cA4ChBC,EAxCM,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,SAE5CC,EAAgB,GAiBpB,OAfA/C,qBAAU,WACa,IAAlB8C,EAAS3B,SACV2B,EAASpD,KAAI,SAAAsD,GACX,IAAIC,EAAY,WAChB,GAAwB,IAArBD,EAAEE,QAAQ/B,OAAa,CACtB8B,EAAYX,EAAYU,EAAEE,SAAS,GAAGR,UACtC,IAAMS,EAAW,CAAC,SAAYH,EAAEI,SAAU,UAAaH,GACvDF,EAAgBA,EAAcnD,OAAOuD,OAI3CN,EAAcP,EAAYS,GAAejD,MAAM,EAAE,OAElD,CAACgD,IAGF,gCACE,6BAAI,8CACJ,uBAAOhE,UAAU,cAAjB,SACE,wBAAOP,MAAO,CAAC0D,UAAW,QAA1B,UACE,sCACA,sCACCW,EAAWlD,KAAI,SAAC2D,EAAG1D,GAClB,OACE,+BACE,qBAAIpB,MAAO,CAAC+E,SAAU,SAAtB,UAAiC3D,EAAI,EAArC,KAA0C0D,EAAED,SAA5C,UACA,+BAAKC,EAAEX,UAAP,SAFO/C,eCMR4D,EAtCE,SAAC,GAA0C,IAAzCrE,EAAwC,EAAxCA,KAAM4D,EAAkC,EAAlCA,SAAUF,EAAwB,EAAxBA,WAAYY,EAAY,EAAZA,OAErCC,EAAeb,EAAWc,MAAK,SAAAV,GAAC,OAAEA,EAAEI,WAAalE,EAAKkE,YACtDD,EAAWL,EAASY,MAAK,SAAAV,GAAC,OAAEA,EAAEI,WAAalE,EAAKkE,YAClDO,EAAO,UACPC,EAAe,iBACfC,EAAc,IAUlB,YARqBC,IAAjBL,GAC8B,OAA3BA,EAAaf,YACZiB,EAAO,EAAIf,EAAWmB,WAAU,SAAAf,GAAC,OAAEA,EAAEI,WAAalE,EAAKkE,YACvDQ,EAAqC,IAAtBhB,EAAWzB,OAAe,KAAOsC,EAAaf,UAC7DmB,EAAcV,EAASD,QAAQ/B,QAKnC,gCACI,qBAAI5C,MAAO,CAACyF,OAAO,GAAnB,sBAAiC9E,EAAKkE,YACtC,0CAAaO,KACb,uBAAO7E,UAAU,YAAjB,SACI,wBAAOP,MAAO,CAAC0D,UAAW,QAA1B,UACI,+BACI,oBAAI1D,MAAO,CAAC+E,SAAU,SAAtB,4BACA,+BAAKM,EAAL,UAEJ,+BACI,+CACA,6BAAKC,YAIjB,uBACA,cAAC1B,EAAA,EAAD,CAAQ7D,QAAQ,oBAAoB8D,KAAK,KAAKC,QAAS,kBAAImB,KAA3D,wBCjCNS,EAAS,uCAAG,WAAOC,GAAP,iBAAApH,EAAA,6DAERqH,EAAUpH,IAAMS,KAJV,aAIwB0G,GAFtB,SAGIC,EAHJ,cAGRC,EAHQ,yBAIPA,EAAIlH,MAJG,2CAAH,sDAUAmH,EAFM,CAACJ,aCiFPK,EAvFD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,aACrB,EAAgCnF,mBAAS,IAAzC,mBAAO+D,EAAP,KAAiBqB,EAAjB,KACA,EAAgCpF,mBAAS,IAAzC,mBAAOqF,EAAP,KAAiBC,EAAjB,KACA,EAA8BtF,oBAAS,GAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,eAAAjI,EAAA,yDAChBiI,EAAM3E,kBAEHwE,EAHa,0CAKF9G,EAAaC,OAAO,CAACqF,WAAUsB,aAL7B,8DAQRF,EAAa,SAAU,uBARf,sDAcOH,EAAaJ,UAAU,CACxCb,WAAUsB,aAfA,QAcNxF,EAdM,OAkBZ8F,OAAOC,aAAaC,QAChB,gBAAiBC,KAAKC,UAAUlG,IAGpCxB,EAAeC,SAASuB,EAAKtC,OAC7B6H,EAAY,IACZE,EAAY,IACZJ,EAAQrF,GACRsF,EAAa,UAAD,kBAAuBtF,EAAKkE,SAA5B,0BA1BA,mDA4BZoB,EAAa,SAAU,6BA5BX,iEAAH,sDAgCXa,GAAyB,IAAZT,EAAoB,QAAU,UAC3CU,GAAyB,IAAZV,EAAoB,YAAc,iBAC/CW,GAA2B,IAAZX,EAAoB,QAAU,UAQnD,OACI,qBAAK9F,UAAU,iBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,uBAAM0G,SAAUV,EAAhB,UACI,6BAAKO,IACL,uBACA,sBAAKvG,UAAU,aAAf,0BAEI,uBACA8C,KAAK,OACLd,MAAOsC,EACPqC,KAAK,WACLrD,KAAK,KACLN,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB0C,EAAY1C,EAAOjB,aAGjD,sBAAKhC,UAAU,aAAf,0BAEI,uBACA8C,KAAK,WACLd,MAAO4D,EACPe,KAAK,WACLrD,KAAK,KACLN,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4C,EAAY5C,EAAOjB,aAGjD,uBACA,cAACqB,EAAA,EAAD,CAAQ7D,QAAQ,YAAYsD,KAAK,SAAjC,uBAGJ,uBACA,sBAAK9C,UAAU,oBAAf,UACI,8BAAMwG,IACN,cAACnD,EAAA,EAAD,CAAQ7D,QAAQ,OAAOC,MAAO,CAACmH,WAAY,KAAMrD,QAvC7C,WAChBwC,GAAYD,GACZH,EAAY,IACZE,EAAY,KAoCA,SAAwEY,aCiB7EI,EA9FO,WAClB,MAAwBtG,mBAAS,IAAjC,mBAAOH,EAAP,KAAaqF,EAAb,KACA,EAAgClF,mBAAS,IAAzC,mBAAOyD,EAAP,KAAiB8C,EAAjB,KACA,EAAmCvG,mBAAS,IAA5C,mBAAOuD,EAAP,KAAkBC,EAAlB,KACA,EAAkCxD,mBAAS,IAA3C,mBAAOqD,EAAP,KAAkBvD,EAAlB,KACA,EAAoCE,mBAAS,IAA7C,mBAAOT,EAAP,KAAmBQ,EAAnB,KACA,EAAoCC,mBAAS,IAA7C,mBAAOlB,EAAP,KAAmB0H,EAAnB,KACA,EAAwCxG,mBAAS,IAAjD,mBAAOjB,EAAP,KAAqB0H,EAArB,KAEA9F,qBAAU,WACN,IAAM+F,EAAiBf,OAAOC,aAAae,QAAQ,iBACnD,GAAID,EAAgB,CAClB,IAAM7G,EAAOiG,KAAKc,MAAMF,GACxBxB,EAAQrF,GACRxB,EAAeC,SAASuB,EAAKtC,UAEhC,IAEHoD,qBAAU,WACNlC,EAAaD,SACVI,MAAK,SAAAmG,GAAG,OAAIwB,EAAYxB,QAC7B,CAAC1B,IAEH,IAQMc,EAAS,WAEX,OADAe,EAAQ,MACDS,OAAOC,aAAaiB,WAAW,kBAqC1C,OACI,gCAEQ,qBAAKpH,UAAU,YAAf,SACI,cAAC,EAAD,CACIX,WAAYA,EACZC,aAAcA,MAKlBc,EA3CV,sBAAKJ,UAAY,gBAAjB,UACE,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,CACII,KAAQA,EACR4D,SAAYA,EACZF,WAAcA,EACdY,OAAUA,MAGlB,qBAAK1E,UAAU,cAAf,SACI,cAAC,EAAD,CACII,KAAQA,EACRwD,UAAaA,EACbvD,aAAgBA,EAChBP,WAAcA,EACdQ,cAAiBA,MAGzB,qBAAKN,UAAY,gBAAjB,SACI,cAAC,EAAD,CACI4D,UAAaA,EACbE,WAAcA,EACdC,cAAiBA,EACjBC,SAAYA,SAuBZ,cAAC,EAAD,CACAyB,QAAWA,EACXC,aA/DK,SAACrG,EAAYC,GAC9ByH,EAAc1H,GACd2H,EAAgB1H,GAChB+H,YAAW,WACPL,EAAgB,QACjB,YC1BIM,EAXA,WAEX,OACI,qBAAKtH,UAAU,SAAf,SACI,qECoBGuH,G,MAXH,WAEV,OACE,sBAAKvH,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,SCRSwH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvI,MAAK,YAAkD,IAA/CwI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxG,SAASa,eAAe,SAM1BiF,M","file":"static/js/main.83d3e51c.chunk.js","sourcesContent":["\r\nimport React, {useState, useEffect} from \"react\"\r\nimport Timer from \"./Timer\"\r\nimport resultsService from \"../services/results\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet timerInterval\r\n\r\n//Prevent user from DOM manipulating and cheating\r\nlet totalMatch = 0\r\n\r\nconst LetterInput = ({user, setTotalTime, localScore, setLocalScore}) =>{\r\n  const [start, setStart] = useState(\"\")\r\n  const [now, setNow] = useState(\"\")\r\n  \r\n  const alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m',\r\n  'n','o','p','q','r','s','t','u','v','w','x','y','z']\r\n\r\n  let alphaWithIdx = []\r\n  alphabet.map((a,idx)=>{alphaWithIdx=alphaWithIdx.concat({a,idx})})\r\n\r\n  const alphaRow1 = alphaWithIdx.slice(0,13)\r\n  const alphaRow2 = alphaWithIdx.slice(13)\r\n\r\n  useEffect(() => restart(), [user])\r\n\r\n  const escKey = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(e.key === \"Escape\"){\r\n      restart()\r\n    }\r\n  }\r\n\r\n  const changeBgColor = (color) => document.getElementsByClassName(\"ctr-display\")[0].style.backgroundColor = color;\r\n\r\n  const spellCheck = async (id, letter, value) =>{\r\n\r\n    if (!start){\r\n      setStart(Date.now())\r\n    }\r\n\r\n    if (letter === \"a\"){\r\n      timerInterval = setInterval(() => {\r\n        let varNow = Date.now()\r\n        setNow(varNow)\r\n      }, 1);\r\n\r\n      document.addEventListener('keyup', escKey)\r\n    }\r\n\r\n    if (value === letter) {\r\n      totalMatch += 1 \r\n      changeBgColor(null)\r\n\r\n      if(letter === \"z\" && totalMatch === alphabet.length){\r\n        const score = (now-start)/1000\r\n        clearInterval(timerInterval)\r\n        await setLocalScore(score)\r\n        await resultsService.saveScore(score)\r\n        setTotalTime(score)\r\n      }\r\n      else{\r\n        document.getElementById(id+1).removeAttribute(\"disabled\")\r\n        document.getElementById(id+1).focus()\r\n      }\r\n    }\r\n    else{\r\n      changeBgColor(\"red\")\r\n    }\r\n  }\r\n\r\n  const restart = () => {\r\n\r\n    for(let idx=0; idx<alphabet.length; idx++){\r\n      const disabled = idx !== 0 ? \"disabled\" : \"\"\r\n      document.getElementById(idx).disabled = disabled\r\n      document.getElementById(idx).value = \"\"\r\n    }\r\n\r\n    totalMatch = 0\r\n    setStart(\"\")\r\n    setNow(\"\")\r\n    setLocalScore(\"\")\r\n    setTotalTime(\"\")\r\n\r\n    changeBgColor(null)\r\n    document.getElementById(0).focus()\r\n    document.removeEventListener('keyup', escKey)\r\n  }\r\n\r\n  const inputField = (alpha) => {\r\n    \r\n    return(\r\n      <div className=\"letterInput\">\r\n        {alpha.map(a => {\r\n          return (\r\n              <span key={a.idx}>\r\n              <label><b>&nbsp;{a.a}&nbsp;</b></label>\r\n              <input\r\n                  disabled={a.idx !== 0 ? \"disabled\" : \"\"}\r\n                  type=\"text\"\r\n                  id={a.idx}\r\n                  maxLength=\"1\"\r\n                  onChange={(e)=>spellCheck(a.idx, a.a, e.target.value)}\r\n                  style={{width: \"20px\", textAlign:\"center\"}}\r\n                  autoComplete=\"off\"\r\n              />\r\n              </span>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Timer\r\n        now={now}\r\n        start={start}\r\n        localScore = {localScore}\r\n      />\r\n      <br/>\r\n      {inputField(alphaRow1)}\r\n      {inputField(alphaRow2)}\r\n      <br/>\r\n      <Button variant=\"secondary\" size=\"sm\" onClick={()=>restart()}>Restart (ESC Key)</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LetterInput","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/results'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n  }\r\n\r\nconst allResults = async () => {\r\n    const req = await axios.get(baseUrl)\r\n\r\n    return req.data\r\n}\r\n\r\nconst saveScore = async (score) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    // const scoreString = JSON.stringify(score)\r\n    \r\n    const response = await axios.post(baseUrl, {score}, config)\r\n    \r\n    return response.data\r\n}\r\n\r\nconst resultsService = {allResults, setToken, saveScore}\r\n\r\nexport default resultsService","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return (response.data)\r\n}\r\n\r\nconst signUp = (body) => {\r\n    const request = axios.post(baseUrl, body)\r\n    return request.then(response => (response.data))\r\n}\r\n\r\nconst usersService = {getAll, signUp}\r\n  \r\nexport default usersService\r\n","\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notification = ({notifClass, notifMessage}) =>{\r\n    if (notifMessage === null){\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <Alert variant={notifClass} style={{padding: \"6px\"}}>\r\n          {notifMessage}\r\n        </Alert>\r\n\r\n      )\r\n}\r\n\r\nexport default Notification","\r\nconst Timer = ({start, now, localScore}) => {\r\n  const liveScore = (now-start)/1000\r\n\r\n  const timerState = () =>{\r\n    if (!start){\r\n      return <h3>Game starts when typing begins</h3>\r\n    }\r\n    else if (!localScore){\r\n      return <h3><b>Timer:</b> {liveScore.toFixed(3)}s</h3>\r\n    }\r\n    return <h3><b>Your alphaTime is:</b> {localScore}s !</h3>\r\n  }\r\n  \r\n  return(\r\n    <div className=\"timer\">\r\n      {timerState()}\r\n    </div>\r\n  )\r\n    \r\n  }\r\n\r\nexport default Timer ","\r\nimport React, {useEffect} from \"react\"\r\n\r\nconst sortResults = (scores) => {  \r\n    return (scores.sort((b, a) => {\r\n        return b.totalTime - a.totalTime;\r\n    }))\r\n}\r\n\r\nconst Leaderboard =  ({topPlayers, setTopPlayers, allUsers}) => {\r\n      \r\n  let usersTopScore = []\r\n\r\n  useEffect(() => {\r\n    if(allUsers.length!==0){\r\n      allUsers.map(u => {\r\n        let userScore = \"No Score\"\r\n        if(u.results.length !== 0){\r\n            userScore = sortResults(u.results)[0].totalTime\r\n            const userData = {\"username\": u.username, \"totalTime\": userScore }\r\n            usersTopScore = usersTopScore.concat(userData)\r\n        }\r\n      })\r\n\r\n      setTopPlayers(sortResults(usersTopScore).slice(0,5))\r\n    }\r\n  }, [allUsers])\r\n\r\n  return(\r\n    <div >\r\n      <h3><u>Leaderboard</u></h3>\r\n      <table className=\"leaderboard\">\r\n        <tbody style={{textAlign: \"left\"}}>\r\n          <th>User</th>\r\n          <th>Time</th>\r\n          {topPlayers.map((p, idx) => {\r\n            return(\r\n              <tr key={idx}>\r\n                <td style={{minWidth: \"100px\"}}>{idx+1}- {p.username}&nbsp;</td>\r\n                <td>{p.totalTime}s</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard","\r\nimport React from \"react\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst UserCard = ({user, allUsers, topPlayers, logout}) => {\r\n    \r\n    const userTopScore = topPlayers.find(u=>u.username === user.username)\r\n    const userData = allUsers.find(u=>u.username === user.username)\r\n    let rank = \"No Rank\"\r\n    let personalBest = \"No Game Played\"\r\n    let gamesPlayed = \"0\"\r\n    \r\n    if (userTopScore !== undefined){\r\n        if(userTopScore.totalTime !== null){\r\n            rank = 1 + topPlayers.findIndex(u=>u.username === user.username)\r\n            personalBest = topPlayers.length === 0 ? null : userTopScore.totalTime\r\n            gamesPlayed = userData.results.length\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3 style={{margin:0}}>Welcome, {user.username}</h3>\r\n            <p>Ranking: {rank}</p>\r\n            <table className=\"userStats\">\r\n                <tbody style={{textAlign: \"left\"}}>\r\n                    <tr>\r\n                        <td style={{minWidth: \"120px\"}}>Personal Best:</td>\r\n                        <td>{personalBest}s</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Games played:</td>\r\n                        <td>{gamesPlayed}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <br/>\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={()=>logout()}>Logout</Button>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default UserCard","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst userLogin = async (credentials) => {\r\n\r\n    const request = axios.post(baseUrl, credentials)\r\n    const res = await request\r\n    return res.data\r\n\r\n}\r\n\r\nconst loginService = {userLogin}\r\n\r\nexport default loginService","\r\nimport React, {useState} from 'react'\r\nimport loginService from \"../services/login\"\r\nimport resultsService from \"../services/results\"\r\nimport usersService from \"../services/users\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Login = ({setUser, notification}) =>{\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [newUser, setNewUser] = useState(false)\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        if(newUser){\r\n            try {\r\n                await usersService.signUp({username, password})\r\n            }\r\n            catch (exception){\r\n                notification(\"danger\", \"Invalid Credentials\")\r\n                return\r\n            }\r\n        }\r\n\r\n        try {\r\n            const user = await loginService.userLogin({\r\n              username, password\r\n            })\r\n\r\n            window.localStorage.setItem(\r\n                'loggedAppUser', JSON.stringify(user)\r\n            )\r\n\r\n            resultsService.setToken(user.token)\r\n            setUsername('')\r\n            setPassword('')\r\n            setUser(user)\r\n            notification(\"success\", `Welcome ${user.username} & Happy alphaTyping!`)\r\n          } catch (exception) {\r\n            notification(\"danger\", \"Wrong/Invalid Credentials\")\r\n          }\r\n    }\r\n\r\n    const inputTitle = newUser === false ? \"Login\" : \"Sign Up\"\r\n    const promptText = newUser === false ? \"New User?\" : \"Existing User?\"\r\n    const promptOption = newUser !== false ? \"Login\" : \"Sign Up\"\r\n\r\n    const switchInput = () => {\r\n        setNewUser(!newUser)\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <div className=\"loginDisplay\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h3>{inputTitle}</h3>\r\n                    <br/>\r\n                    <div className=\"loginField\">\r\n                    Username:&nbsp;\r\n                        <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        name=\"Username\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setUsername(target.value)}\r\n                    />\r\n                    </div>\r\n                    <div className=\"loginField\">\r\n                    Password:&nbsp;\r\n                        <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                    </div>\r\n                    <br/>\r\n                    <Button variant=\"secondary\" type=\"submit\">Submit</Button>\r\n                \r\n                </form>\r\n                <br/>\r\n                <div className=\"toggleLoginSignUp\">\r\n                    <div>{promptText}</div>\r\n                    <Button variant=\"link\" style={{paddingTop: '0'}} onClick={switchInput}>{promptOption}</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","\r\nimport React, {useState, useEffect} from \"react\"\r\nimport resultsService from \"../services/results\"\r\nimport usersService from \"../services/users\";\r\nimport Notification from \"./Notification\"\r\nimport LetterInput from \"./LetterInput\"\r\nimport Leaderboard from \"./Leaderboard\"\r\nimport UserCard from \"./UserCard\"\r\nimport Login from \"./Login\"\r\n\r\nconst MainContainer = () => {\r\n    const [user, setUser] = useState(\"\")\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [topPlayers,setTopPlayers] = useState([])\r\n    const [totalTime, setTotalTime] = useState(\"\")\r\n    const [localScore, setLocalScore] = useState(\"\")\r\n    const [notifClass, setNotifClass] = useState('')\r\n    const [notifMessage, setNotifMessage] = useState('')\r\n    \r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n        if (loggedUserJSON) {\r\n          const user = JSON.parse(loggedUserJSON)\r\n          setUser(user)\r\n          resultsService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        usersService.getAll()\r\n          .then(res => setAllUsers(res))\r\n    },[totalTime])\r\n\r\n    const notification = (notifClass, notifMessage) => {\r\n        setNotifClass(notifClass)\r\n        setNotifMessage(notifMessage)\r\n        setTimeout(() => {\r\n            setNotifMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser(null)\r\n        return window.localStorage.removeItem('loggedAppUser')\r\n    }\r\n\r\n    const loggedInDisplay = () => {\r\n        return(\r\n          <div className = \"mainContainer\">\r\n            <div className=\"left-display\">\r\n                <UserCard\r\n                    user = {user}\r\n                    allUsers = {allUsers}\r\n                    topPlayers = {topPlayers}\r\n                    logout = {logout}\r\n                />\r\n            </div>\r\n            <div className=\"ctr-display\">\r\n                <LetterInput\r\n                    user = {user}\r\n                    totalTime = {totalTime}\r\n                    setTotalTime = {setTotalTime}\r\n                    localScore = {localScore}\r\n                    setLocalScore = {setLocalScore}\r\n                /> \r\n            </div>\r\n            <div className = \"right-display\">\r\n                <Leaderboard\r\n                    totalTime = {totalTime}\r\n                    topPlayers = {topPlayers}\r\n                    setTopPlayers = {setTopPlayers}\r\n                    allUsers = {allUsers}\r\n                />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const fade = false\r\n\r\n    return(\r\n        <div>\r\n            \r\n                <div className=\"notifFlex\">\r\n                    <Notification\r\n                        notifClass={notifClass}\r\n                        notifMessage={notifMessage}\r\n                    />\r\n                </div>\r\n                \r\n                {\r\n                    user ?\r\n                    loggedInDisplay()\r\n                    :\r\n                    <Login\r\n                    setUser = {setUser}\r\n                    notification={notification}\r\n                    />\r\n                }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContainer","\r\nconst Footer = () => {\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <small>\r\n                Copyright &copy; 2021 Benny Luo\r\n            </small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","\r\n//Prevent same username to be used\r\n//Multi-view (i.e. About Page)\r\n//letter above input field?\r\n//User card -> stats (i.e. # games played, recent scores)\r\n//Testing (Cypress?)\r\n//Notifications\r\n//Style page\r\n\r\nimport React from 'react'\r\nimport MainContainer from \"./components/MainContainer\"\r\nimport Footer from \"./components/Footer\"\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      <h1 className=\"gameTitle\">alphaType</h1>\r\n      <MainContainer/>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}