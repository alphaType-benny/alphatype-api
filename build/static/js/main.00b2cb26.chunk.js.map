{"version":3,"sources":["components/LetterInput.js","components/Header.js","services/results.js","services/users.js","components/Notification.js","components/Timer.js","components/Leaderboard.js","components/UserCard.js","services/login.js","components/Login.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["timerInterval","Header","user","padding","className","style","baseUrl","token","allResults","a","axios","get","req","data","saveScore","score","config","headers","Authorization","post","response","resultsService","setToken","newToken","getAll","usersService","signUp","body","then","Notification","notifClass","notifMessage","Alert","variant","Timer","start","now","localScore","liveScore","toFixed","totalMatch","LetterInput","setTotalTime","setLocalScore","useState","setStart","setNow","alphabet","alphaWithIdx","forEach","idx","concat","alphaRow1","slice","alphaRow2","useEffect","restart","escKey","e","preventDefault","code","changeBgColor","color","document","getElementsByClassName","backgroundColor","spellCheck","id","letter","value","Date","setInterval","varNow","addEventListener","toUpperCase","length","clearInterval","getElementById","removeAttribute","focus","disabled","removeEventListener","inputField","alpha","map","type","maxLength","onChange","target","width","textAlign","autoComplete","Button","size","onClick","sortResults","scores","sort","b","totalTime","Leaderboard","usersTopScore","setUsersTopScore","allUsers","topScores","u","userScore","results","userData","username","p","minWidth","UserCard","logout","userTopScore","find","rankDisplay","personalBest","gamesPlayed","undefined","rank","findIndex","margin","userLogin","credentials","request","res","loginService","Login","setUser","notification","setUsername","password","setPassword","newUser","setNewUser","handleLogin","event","console","log","window","localStorage","setItem","JSON","stringify","inputTitle","promptText","promptOption","onSubmit","name","paddingTop","Body","setAllUsers","setNotifClass","setNotifMessage","loggedUserJSON","getItem","parse","removeItem","setTimeout","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00b2cb26.chunk.js","sourcesContent":["\r\nimport React, {useState, useEffect} from \"react\"\r\nimport Timer from \"./Timer\"\r\nimport resultsService from \"../services/results\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet timerInterval\r\n\r\n//Prevent user from DOM manipulating and cheating\r\nlet totalMatch = 0\r\n\r\nconst LetterInput = ({user, setTotalTime, localScore, setLocalScore}) =>{\r\n  const [start, setStart] = useState(\"\")\r\n  const [now, setNow] = useState(\"\")\r\n  \r\n  const alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m',\r\n  'n','o','p','q','r','s','t','u','v','w','x','y','z']\r\n\r\n  let alphaWithIdx = []\r\n  alphabet.forEach((a,idx)=>{alphaWithIdx=alphaWithIdx.concat({a,idx})})\r\n\r\n  const alphaRow1 = alphaWithIdx.slice(0,13)\r\n  const alphaRow2 = alphaWithIdx.slice(13)\r\n\r\n  useEffect(() => {\r\n    restart()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user])\r\n\r\n  const escKey = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(e.code === \"Space\" || e.code === \"Escape\"){\r\n      restart()\r\n    }\r\n  }\r\n\r\n  const changeBgColor = (color) => document.getElementsByClassName(\"ctr-display\")[0].style.backgroundColor = color;\r\n\r\n  const spellCheck = async (id, letter, value) =>{\r\n\r\n    if(value!==\" \")\r\n    {  if (!start){\r\n        setStart(Date.now())\r\n      }\r\n  \r\n      if (letter === \"a\"){\r\n        timerInterval = setInterval(() => {\r\n          let varNow = Date.now()\r\n          setNow(varNow)\r\n        }, 1);\r\n\r\n        document.addEventListener('keyup', escKey)\r\n      }\r\n\r\n      if (value.toUpperCase() === letter.toUpperCase()) {\r\n        totalMatch += 1 \r\n        changeBgColor(null)\r\n\r\n        if(letter === \"z\" && totalMatch === alphabet.length){\r\n          const score = (now-start)/1000\r\n          clearInterval(timerInterval)\r\n          await setLocalScore(score)\r\n          await resultsService.saveScore(score)\r\n          setTotalTime(score)\r\n        }\r\n        else{\r\n          document.getElementById(id+1).removeAttribute(\"disabled\")\r\n          document.getElementById(id+1).focus()\r\n        }\r\n      }\r\n      else{\r\n        changeBgColor(\"red\")\r\n      }\r\n    }\r\n    else{\r\n      restart()\r\n    }\r\n  }\r\n\r\n  const restart = () => {\r\n\r\n    for(let idx=0; idx<alphabet.length; idx++){\r\n      const disabled = idx !== 0 ? \"disabled\" : \"\"\r\n      document.getElementById(idx).disabled = disabled\r\n      document.getElementById(idx).value = \"\"\r\n    }\r\n\r\n    totalMatch = 0\r\n    setStart(\"\")\r\n    setNow(\"\")\r\n    setLocalScore(\"\")\r\n    setTotalTime(\"\")\r\n\r\n    changeBgColor(null)\r\n    document.getElementById(0).focus()\r\n    document.removeEventListener('keyup', escKey)\r\n  }\r\n\r\n  const inputField = (alpha) => {\r\n    \r\n    return(\r\n      <div className=\"letterInput\">\r\n        {alpha.map(a => {\r\n          return (\r\n              <span key={a.idx}>\r\n                <label><b>&nbsp;{a.a}&nbsp;</b></label>\r\n                <input\r\n                    disabled={a.idx !== 0 ? \"disabled\" : \"\"}\r\n                    type=\"text\"\r\n                    id={a.idx}\r\n                    maxLength=\"1\"\r\n                    onChange={(e)=>spellCheck(a.idx, a.a, e.target.value)}\r\n                    style={{width: \"20px\", textAlign:\"center\"}}\r\n                    autoComplete=\"off\"\r\n                />\r\n              </span>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Timer\r\n        now={now}\r\n        start={start}\r\n        localScore = {localScore}\r\n      />\r\n      <br/>\r\n      {inputField(alphaRow1)}\r\n      {inputField(alphaRow2)}\r\n      <br/>\r\n      <Button variant=\"secondary\" size=\"sm\" onClick={()=>restart()}>Restart (Space Key)</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LetterInput","\r\nconst Header = ({user}) => {\r\n\r\n    const padding = user ? \"20px\" : \"10px\"\r\n\r\n    return(\r\n        <div className=\"header\" style={{padding: padding}}>\r\n            <h1 className=\"gameTitle\">alphaType</h1>\r\n            {user ? \"\" : \"A Typing Game\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/results'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n  }\r\n\r\nconst allResults = async () => {\r\n    const req = await axios.get(baseUrl)\r\n\r\n    return req.data\r\n}\r\n\r\nconst saveScore = async (score) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    // const scoreString = JSON.stringify(score)\r\n    \r\n    const response = await axios.post(baseUrl, {score}, config)\r\n    \r\n    return response.data\r\n}\r\n\r\nconst resultsService = {allResults, setToken, saveScore}\r\n\r\nexport default resultsService","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return (response.data)\r\n}\r\n\r\nconst signUp = (body) => {\r\n    const request = axios.post(baseUrl, body)\r\n    return request.then(response => (response.data))\r\n}\r\n\r\nconst usersService = {getAll, signUp}\r\n  \r\nexport default usersService\r\n","import Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notification = ({notifClass, notifMessage}) =>{\r\n    if (notifMessage === null){\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <Alert variant={notifClass} style={{padding: \"6px\"}}>\r\n          {notifMessage}\r\n        </Alert>\r\n\r\n      )\r\n}\r\n\r\nexport default Notification","\r\nconst Timer = ({start, now, localScore}) => {\r\n  const liveScore = (now-start)/1000\r\n\r\n  const timerState = () =>{\r\n    if (!start){\r\n      return <h3>Timer starts when typing begins</h3>\r\n    }\r\n    else if (!localScore){\r\n      return <h3><b>Timer:</b> {liveScore.toFixed(3)}s</h3>\r\n    }\r\n    return <h3><b>Your alphaTime is:</b> {localScore.toFixed(3)}s !</h3>\r\n  }\r\n  \r\n  return(\r\n    <div className=\"timer\">\r\n      {timerState()}\r\n    </div>\r\n  )\r\n    \r\n  }\r\n\r\nexport default Timer ","\r\nimport React, {useEffect} from \"react\"\r\n\r\nconst sortResults = (scores) => {  \r\n    return (scores.sort((b, a) => {\r\n        return b.totalTime - a.totalTime;\r\n    }))\r\n}\r\n\r\nconst Leaderboard =  ({usersTopScore, setUsersTopScore, allUsers}) => {\r\n\r\n  useEffect(() => {\r\n    let topScores = []\r\n\r\n    if(allUsers.length!==0){\r\n      allUsers.forEach(u => {\r\n        let userScore = \"No Score\"\r\n        if(u.results.length !== 0){\r\n            userScore = sortResults(u.results)[0].totalTime\r\n            const userData = {\"username\": u.username, \"totalTime\": userScore }\r\n            topScores = topScores.concat(userData)\r\n        }\r\n      })\r\n      setUsersTopScore(sortResults(topScores))\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allUsers])\r\n\r\n  return(\r\n    <div >\r\n      <h3><u>Leaderboard</u></h3>\r\n      <table className=\"leaderboard\">\r\n      <tbody style={{textAlign: \"left\"}}>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Time</th>\r\n          </tr>\r\n          \r\n          {(usersTopScore.slice(0,5)).map((p, idx) => {\r\n            return(\r\n              <tr key={idx}>\r\n                <td style={{minWidth: \"100px\"}}>{idx+1}- {p.username}&nbsp;</td>\r\n                <td>{p.totalTime}s</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard","\r\nimport React from \"react\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst UserCard = ({user, allUsers, usersTopScore, logout}) => {\r\n    \r\n    const userTopScore = usersTopScore.find(u=>u.username === user.username)\r\n    const userData = allUsers.find(u=>u.username === user.username)\r\n    let rankDisplay = \"No Rank\"\r\n    let personalBest = \"No Game Played\"\r\n    let gamesPlayed = \"0\"\r\n    \r\n    if (userTopScore !== undefined){\r\n        \r\n        if(userTopScore.totalTime !== null){\r\n            const rank = 1 + usersTopScore.findIndex(u=>u.username === user.username)\r\n            rankDisplay = `${rank} (out of ${usersTopScore.length})`\r\n            personalBest = usersTopScore.length === 0 ? null : `${userTopScore.totalTime}s`\r\n            gamesPlayed = userData.results.length\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3 style={{margin:0}}>Welcome, {user.username}</h3>\r\n            <p>Ranking: {rankDisplay}</p>\r\n            <table className=\"userStats\">\r\n                <tbody style={{textAlign: \"left\"}}>\r\n                    <tr>\r\n                        <td style={{minWidth: \"120px\"}}>Personal Best:</td>\r\n                        <td>{personalBest}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Games played:</td>\r\n                        <td>{gamesPlayed}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <br/>\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={()=>logout()}>Logout</Button>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default UserCard","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst userLogin = async (credentials) => {\r\n\r\n    const request = axios.post(baseUrl, credentials)\r\n    const res = await request\r\n    return res.data\r\n\r\n}\r\n\r\nconst loginService = {userLogin}\r\n\r\nexport default loginService","\r\nimport React, {useState} from 'react'\r\nimport loginService from \"../services/login\"\r\nimport resultsService from \"../services/results\"\r\nimport usersService from \"../services/users\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Login = ({setUser, notification}) =>{\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [newUser, setNewUser] = useState(false)\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        if(newUser){\r\n            try {\r\n                await usersService.signUp({username, password})\r\n            }\r\n            catch (exception){\r\n                notification(\"danger\", \"Invalid Credentials\")\r\n                return\r\n            }\r\n        }\r\n\r\n        try {\r\n            const user = await loginService.userLogin({username, password})\r\n            console.log(user);\r\n            window.localStorage.setItem('loggedAppUser', JSON.stringify(user))\r\n\r\n            resultsService.setToken(user.token)\r\n            setUsername('')\r\n            setPassword('')\r\n            setUser(user)\r\n            notification(\"success\", `Welcome ${user.username} and Happy alphaTyping!`)\r\n          } catch (exception) {\r\n            notification(\"danger\", \"Wrong/Invalid Credentials\")\r\n          }\r\n    }\r\n\r\n    const inputTitle = newUser === false ? \"Login to Play\" : \"Create Account\"\r\n    const promptText = newUser === false ? \"New User?\" : \"Existing User?\"\r\n    const promptOption = newUser !== false ? \"Login\" : \"Sign Up\"\r\n\r\n    const switchInput = () => {\r\n        setNewUser(!newUser)\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <div className=\"loginDisplay\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h3>{inputTitle}</h3>\r\n                    <br/>\r\n                    <div className=\"loginField\">\r\n                    Username:&nbsp;\r\n                        <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        name=\"Username\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setUsername(target.value)}\r\n                    />\r\n                    </div>\r\n                    <div className=\"loginField\">\r\n                    Password:&nbsp;\r\n                        <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                    </div>\r\n                    <br/>\r\n                    <Button variant=\"secondary\" type=\"submit\">Submit</Button>\r\n                \r\n                </form>\r\n                <br/>\r\n                <div className=\"toggleLoginSignUp\">\r\n                    <div>{promptText}</div>\r\n                    <Button variant=\"link\" style={{paddingTop: '0'}} onClick={switchInput}>{promptOption}</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","\r\nimport React, {useState, useEffect} from \"react\"\r\nimport resultsService from \"../services/results\"\r\nimport usersService from \"../services/users\";\r\nimport Notification from \"./Notification\"\r\nimport LetterInput from \"./LetterInput\"\r\nimport Leaderboard from \"./Leaderboard\"\r\nimport UserCard from \"./UserCard\"\r\nimport Login from \"./Login\"\r\n\r\nconst Body = ({user, setUser}) => {\r\n    \r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [usersTopScore, setUsersTopScore ] = useState([])\r\n    const [totalTime, setTotalTime] = useState(\"\")\r\n    const [localScore, setLocalScore] = useState(\"\")\r\n    const [notifClass, setNotifClass] = useState('')\r\n    const [notifMessage, setNotifMessage] = useState('')\r\n    \r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n        if (loggedUserJSON) {\r\n          const user = JSON.parse(loggedUserJSON)\r\n          setUser(user)\r\n          resultsService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        usersService.getAll()\r\n          .then(res => setAllUsers(res))\r\n    },[totalTime])\r\n\r\n    const notification = (notifClass, notifMessage) => {\r\n        setNotifClass(notifClass)\r\n        setNotifMessage(notifMessage)\r\n        setTimeout(() => {\r\n            setNotifMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser(null)\r\n        return window.localStorage.removeItem('loggedAppUser')\r\n    }\r\n\r\n    const loggedInDisplay = () => {\r\n        return(\r\n            <div>\r\n                <div className = \"mainContainer\">\r\n                    <div className=\"left-display\">\r\n                        <UserCard\r\n                            user = {user}\r\n                            allUsers = {allUsers}\r\n                            usersTopScore = {usersTopScore}\r\n                            logout = {logout}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ctr-display\">\r\n                        <LetterInput\r\n                            user = {user}\r\n                            totalTime = {totalTime}\r\n                            setTotalTime = {setTotalTime}\r\n                            localScore = {localScore}\r\n                            setLocalScore = {setLocalScore}\r\n                        />\r\n                    </div>\r\n                    <div className = \"right-display\">\r\n                        <Leaderboard\r\n                            totalTime = {totalTime}\r\n                            usersTopScore = {usersTopScore}\r\n                            setUsersTopScore = {setUsersTopScore}\r\n                            allUsers = {allUsers}\r\n                        />\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"notifFlex\">\r\n                <Notification\r\n                    user={user}\r\n                    usersTopScore={usersTopScore}\r\n                    notifClass={notifClass}\r\n                    notifMessage={notifMessage}\r\n                />\r\n            </div>\r\n            <div>\r\n                 {\r\n                user ?\r\n                loggedInDisplay()\r\n                :\r\n                <Login\r\n                    user={user}\r\n                    setUser = {setUser}\r\n                    notification={notification}\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","\r\nconst Footer = () => {\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <small>\r\n                Copyright &copy; 2021 Benny Luo\r\n            </small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","\r\n//State Management (Redux)\r\n//Multi-view (i.e. About Page)\r\n//Testing (Cypress?)\r\n//Notif after get user response \r\n\r\nimport React, {useState} from 'react'\r\nimport Header from \"./components/Header\"\r\nimport Body from \"./components/Body\"\r\nimport Footer from \"./components/Footer\"\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(\"\")\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      <Header user={user} />\r\n      <Body user={user} setUser={setUser} />\r\n      <Footer/>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}