{"version":3,"sources":["components/LetterInput.js","components/Header.js","components/Notification.js","components/Timer.js","services/results.js","components/Leaderboard.js","reducers/currentUserReducer.js","components/UserCard.js","services/login.js","services/users.js","components/Login.js","reducers/allUserReducer.js","reducers/resultReducer.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","reducers/topScoresReducer.js","store.js","index.js"],"names":["timerInterval","Header","user","useSelector","state","currentUser","padding","className","style","Notification","notifClass","notifMessage","Alert","variant","Timer","start","now","localScore","liveScore","toFixed","baseUrl","token","allResults","a","axios","get","req","data","saveScore","score","config","headers","Authorization","post","response","resultsService","setToken","newToken","totalKeyPress","LetterInput","setTotalTime","useState","setStart","setNow","setLocalScore","alphabet","alphaWithIdx","forEach","idx","concat","alphaRow1","slice","alphaRow2","useEffect","restart","escKey","e","preventDefault","key","code","changeBgColor","color","document","getElementsByClassName","backgroundColor","spellCheck","id","letter","value","Date","setInterval","varNow","addEventListener","toUpperCase","length","clearInterval","getElementById","removeAttribute","focus","i","disabled","removeEventListener","inputField","alpha","map","type","maxLength","onChange","target","onKeyDown","autoComplete","Button","size","onClick","sortResults","scores","sort","b","totalTime","Leaderboard","usersTopScore","setUsersTopScore","showTop10","setShowTop10","allUsers","users","topScores","u","userScore","results","userData","username","scoreToShow","buttonDisplay","extraPadding","paddingTop","textAlign","rank","p","minWidth","topUsers","textDecoration","setCurrentUser","dispatch","reducer","action","UserCard","useDispatch","userTopScore","find","rankDisplay","personalBest","gamesPlayed","undefined","findIndex","Badge","pill","bg","text","margin","window","localStorage","removeItem","userLogin","credentials","request","res","loginService","getAll","usersService","signUp","body","then","Login","notification","setUsername","password","setPassword","newUser","setNewUser","handleLogin","event","setItem","JSON","stringify","inputTitle","promptText","promptOption","onSubmit","name","Body","setNotifClass","setNotifMessage","loggedUserJSON","getItem","parse","setTimeout","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","currentUserReducer","allUsersReducer","result","resultReducer","topScore","topScoreReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7c40c68a.chunk.js","sourcesContent":["\r\nimport React, {useState, useEffect} from \"react\"\r\nimport { useSelector } from 'react-redux'\r\nimport Timer from \"./Timer\"\r\nimport resultsService from \"../services/results\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet timerInterval\r\nlet totalKeyPress = 0\r\n\r\nconst LetterInput = ({setTotalTime}) =>{\r\n  const [start, setStart] = useState(\"\")\r\n  const [now, setNow] = useState(\"\")\r\n  const [localScore, setLocalScore] = useState(\"\")\r\n  const user = useSelector(state => state.currentUser)\r\n  const alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m',\r\n  'n','o','p','q','r','s','t','u','v','w','x','y','z']\r\n\r\n  let alphaWithIdx = []\r\n  alphabet.forEach((a,idx)=>{alphaWithIdx=alphaWithIdx.concat({a,idx})})\r\n\r\n  const alphaRow1 = alphaWithIdx.slice(0,13)\r\n  const alphaRow2 = alphaWithIdx.slice(13)\r\n\r\n  useEffect(() => {\r\n    restart()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user])\r\n\r\n  const escKey = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(e.key === \"Escape\" || e.code === \"Space\"){\r\n      restart()\r\n    }\r\n  }\r\n\r\n  const changeBgColor = (color) => document.getElementsByClassName(\"ctr-display\")[0].style.backgroundColor = color;\r\n\r\n  const spellCheck = async (id, letter, value) =>{\r\n    if(value !== \" \"){\r\n      if (!start){\r\n        setStart(Date.now())\r\n      }\r\n\r\n      if (letter === \"a\"){\r\n        timerInterval = setInterval(() => {\r\n          let varNow = Date.now()\r\n          setNow(varNow)\r\n        }, 1);\r\n\r\n        document.addEventListener('keyup', escKey)\r\n      }\r\n\r\n      if (value.toUpperCase() === letter.toUpperCase()) {\r\n        \r\n        changeBgColor(null)\r\n\r\n        if(letter === \"z\" && totalKeyPress >= alphabet.length){\r\n          const score = (now-start)/1000\r\n          clearInterval(timerInterval)\r\n          await setLocalScore(score)\r\n          await resultsService.saveScore(score)\r\n          setTotalTime(score)\r\n        }\r\n        else if(letter === \"z\" && totalKeyPress < alphabet.length){\r\n          restart()\r\n        }\r\n        else{\r\n          document.getElementById(id+1).removeAttribute(\"disabled\")\r\n          document.getElementById(id+1).focus()\r\n        }\r\n      }\r\n      else{\r\n        changeBgColor(\"red\")\r\n      }\r\n    }\r\n    else{restart()}\r\n  }\r\n\r\n  const restart = () => {\r\n\r\n    for(let i=0; i<alphabet.length; i++){\r\n      const disabled = i !== 0 ? \"disabled\" : \"\"\r\n      document.getElementById(i).disabled = disabled\r\n      document.getElementById(i).value = \"\"\r\n    }\r\n\r\n    setStart(\"\")\r\n    setNow(\"\")\r\n    setLocalScore(\"\")\r\n    setTotalTime(\"\")\r\n    totalKeyPress = 0\r\n\r\n    changeBgColor(null)\r\n    document.getElementById(0).focus()\r\n    document.removeEventListener('keyup', escKey)\r\n  }\r\n\r\n  const inputField = (alpha) => {\r\n    \r\n    return(\r\n      <div className=\"letterInputFlex\">\r\n        {alpha.map(a => {\r\n          return (\r\n              <span key={a.idx} className=\"letterInputSpan\">\r\n                <label><b>&nbsp;{a.a}&nbsp;</b></label>\r\n                <input\r\n                    disabled={a.idx !== 0 ? \"disabled\" : \"\"}\r\n                    type=\"text\"\r\n                    id={a.idx}\r\n                    maxLength=\"1\"\r\n                    onChange={(e)=>spellCheck(a.idx, a.a, e.target.value)}\r\n                    onKeyDown={()=>totalKeyPress += 1}\r\n                    className=\"letterInput\"\r\n                    autoComplete=\"off\"\r\n                />\r\n              </span>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Timer\r\n        now={now}\r\n        start={start}\r\n        localScore = {localScore}\r\n      />\r\n      <div className=\"letterInputFields\">\r\n        {inputField(alphaRow1)}\r\n        {inputField(alphaRow2)}\r\n      </div>\r\n      <Button variant=\"secondary\" size=\"sm\" onClick={()=>restart()}>Restart (Space Key)</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LetterInput","\r\nimport { useSelector} from 'react-redux'\r\n\r\nconst Header = () => {\r\n\r\n    const user = useSelector(state => state.currentUser)\r\n    const padding = user ? \"20px\" : \"10px\"\r\n\r\n    return(\r\n        <div className=\"header\" style={{padding: padding}}>\r\n            <h1 className=\"gameTitle\">alphaType</h1>\r\n            {user ? \"\" : \"A Typing Game\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notification = ({notifClass, notifMessage}) =>{\r\n  \r\n  if (notifMessage === null){\r\n      return null\r\n  }\r\n\r\n  return (\r\n    <Alert variant={notifClass} style={{padding: \"6px\"}}>\r\n      {notifMessage}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification","\r\nconst Timer = ({start, now, localScore}) => {\r\n  const liveScore = (now-start)/1000\r\n\r\n  const timerState = () =>{\r\n\r\n    if (!start){\r\n      return <h3>Timer starts when typing begins</h3>\r\n    }\r\n    else if (!localScore){\r\n      return <h3><b>Timer:</b> {liveScore.toFixed(3)}s</h3>\r\n    }\r\n\r\n    return(\r\n      <h3>\r\n        <b>Your alphaTime is: </b> \r\n        {localScore <= 0 ? \"Invalid Result\" : `${localScore.toFixed(3)}s !`}\r\n      </h3>\r\n    )\r\n  }\r\n  \r\n  return(\r\n    <div className=\"timer\">\r\n      {timerState()}\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\nexport default Timer ","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/results'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n  }\r\n\r\nconst allResults = async () => {\r\n    const req = await axios.get(baseUrl)\r\n\r\n    return req.data\r\n}\r\n\r\nconst saveScore = async (score) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    // const scoreString = JSON.stringify(score)\r\n    \r\n    const response = await axios.post(baseUrl, {score}, config)\r\n    \r\n    return response.data\r\n}\r\n\r\nconst resultsService = {allResults, setToken, saveScore}\r\n\r\nexport default resultsService","\r\nimport React, {useState, useEffect} from \"react\"\r\nimport { useSelector} from 'react-redux'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst sortResults = (scores) => {  \r\n    return (scores.sort((b, a) => {\r\n        return b.totalTime - a.totalTime;\r\n    }))\r\n}\r\n\r\nconst Leaderboard =  ({usersTopScore, setUsersTopScore}) => {\r\n\r\n  const [showTop10, setShowTop10] = useState(false)\r\n  const allUsers = useSelector(state => state.users)\r\n\r\n  useEffect(() => {\r\n    let topScores = []\r\n\r\n    if(allUsers.length!==0){\r\n      allUsers.forEach(u => {\r\n        let userScore = \"No Score\"\r\n        if(u.results.length !== 0){\r\n            userScore = sortResults(u.results)[0].totalTime\r\n            const userData = {\"username\": u.username, \"totalTime\": userScore }\r\n            topScores = [...topScores, userData]\r\n        }\r\n      })\r\n      setUsersTopScore(sortResults(topScores))\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allUsers])\r\n\r\n  const scoreToShow = showTop10 ? 10 : 5 \r\n  const buttonDisplay = showTop10 ? \"Show Less\" : \"Show More\"\r\n  const extraPadding = showTop10 ? \"0\" : \"20px\"\r\n\r\n  const topUsers = () => {\r\n    let rank\r\n    return(\r\n      (usersTopScore.slice(0,scoreToShow)).map((p, idx) => {\r\n        const top3 = [\"🏆\",\"🥈\",\"🥉\"]\r\n\r\n        if(idx<=2){\r\n          rank = `${top3[idx]} `\r\n        }\r\n        else{\r\n          rank =<b>{idx+1}.</b>\r\n        }\r\n\r\n        return(\r\n          <tr key={idx}>\r\n            <td style={{minWidth: \"30px\", textAlign:\"center\"}}>{rank}</td>\r\n            <td style={{minWidth: \"130px\"}}>{p.username}&nbsp;</td>\r\n            <td>{p.totalTime}s</td>\r\n          </tr>\r\n        )\r\n      })\r\n    )\r\n  }\r\n \r\n  return(\r\n    <div className=\"leaderContainer\">\r\n      <h3 style={{paddingTop:extraPadding}}><u>Leaderboard</u></h3>\r\n      <table className=\"leaderboard\">\r\n      <tbody style={{textAlign: \"left\"}}>\r\n        <tr>\r\n          <th></th>\r\n          <th>User</th>\r\n          <th>Time</th>\r\n        </tr>\r\n        {topUsers()}\r\n      </tbody>\r\n        \r\n      </table>\r\n      <Button variant=\"link\" size=\"sm\" style={{textDecoration:\"none\", color:\"grey\"}} onClick={()=>setShowTop10(!showTop10)}>\r\n        {buttonDisplay}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard","\r\nexport const setCurrentUser = (user) => {\r\n    return async dispatch => {\r\n        const data = user\r\n        dispatch({\r\n            type: 'CURRENTUSER',\r\n            data\r\n        })\r\n    }\r\n  }\r\n  \r\nconst reducer = (state = \"\", action) => {\r\nswitch (action.type) {\r\n    case 'CURRENTUSER':\r\n    return action.data\r\n    default: \r\n    return state\r\n}\r\n}\r\n\r\nexport default reducer","\r\nimport React, {useState} from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setCurrentUser } from '../reducers/currentUserReducer'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\n\r\n\r\nconst UserCard = ({usersTopScore}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(state => state.currentUser)\r\n    const allUsers = useSelector(state => state.users)\r\n\r\n    const userTopScore = usersTopScore.find(u=>u.username === user.username)\r\n    const userData = allUsers.find(u=>u.username === user.username)\r\n    \r\n    let rankDisplay = \"No Rank\"\r\n    let personalBest = \"No Game Played\"\r\n    let gamesPlayed = \"0\"\r\n    //const buttonDisplay = showTop10 ? \"Show Less\" : \"Show More\"\r\n    \r\n    if (userTopScore !== undefined){\r\n        if(userTopScore.totalTime !== null){\r\n            const rank = 1 + usersTopScore.findIndex(u=>u.username === user.username)\r\n            rankDisplay = rank === 1 ? <Badge pill bg=\"warning\" text=\"dark\">Champ 🏆</Badge> : `Global Ranking: ${rank}`\r\n            personalBest = usersTopScore.length === 0 ? null : `${userTopScore.totalTime}s`\r\n            gamesPlayed = userData.results.length\r\n        }\r\n    }\r\n\r\n\r\n    const logout = () => {\r\n        //setUser(null) \r\n        dispatch(setCurrentUser(null))\r\n        return window.localStorage.removeItem('loggedAppUser')\r\n    }\r\n\r\n    return(\r\n        <div className=\"userCard\">\r\n            <h3 style={{margin:0}}>Welcome, {user.username}</h3>\r\n            <div className=\"rankDisplay\"> {rankDisplay}</div>\r\n            <table className=\"userStats\">\r\n                <tbody style={{textAlign: \"left\"}}>\r\n                    <tr>\r\n                        <td style={{minWidth: \"120px\"}}>Personal Best:</td>\r\n                        <td>{personalBest}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Games played:</td>\r\n                        <td>{gamesPlayed}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <Button className=\"logoutButton\" variant=\"outline-secondary\" size=\"sm\" onClick={()=>logout()}>Logout</Button>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default UserCard","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst userLogin = async (credentials) => {\r\n\r\n    const request = axios.post(baseUrl, credentials)\r\n    const res = await request\r\n    return res.data\r\n\r\n}\r\n\r\nconst loginService = {userLogin}\r\n\r\nexport default loginService","\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return (response.data)\r\n}\r\n\r\nconst signUp = (body) => {\r\n    const request = axios.post(baseUrl, body)\r\n    return request.then(response => (response.data))\r\n}\r\n\r\nconst usersService = {getAll, signUp}\r\n  \r\nexport default usersService\r\n","\r\nimport React, {useState} from 'react'\r\nimport loginService from \"../services/login\"\r\nimport resultsService from \"../services/results\"\r\nimport usersService from \"../services/users\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { setCurrentUser } from '../reducers/currentUserReducer'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Login = ({notification}) =>{\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [newUser, setNewUser] = useState(false)\r\n    \r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        if(newUser){\r\n            try {\r\n                await usersService.signUp({username, password})\r\n            }\r\n            catch (exception){\r\n                notification(\"danger\", <div>\r\n                Invalid Credentials\r\n                <br/>\r\n                Username must be unique and have 3-12 characters\r\n                <br/>\r\n                Password must have at least 3 characters\r\n                </div>)\r\n                setPassword('')\r\n                return\r\n            }\r\n        }\r\n\r\n        try {\r\n            const user = await loginService.userLogin({username, password})\r\n            window.localStorage.setItem('loggedAppUser', JSON.stringify(user))\r\n\r\n            resultsService.setToken(user.token)\r\n            setUsername('')\r\n            setPassword('')\r\n            \r\n            dispatch(setCurrentUser(user))\r\n            \r\n            notification(\"success\", `Welcome ${user.username} & Happy alphaTyping!`)\r\n          } catch (exception) {\r\n            setPassword('')\r\n            notification(\"danger\", \"Wrong/Invalid Credentials\")\r\n          }\r\n    }\r\n\r\n    const inputTitle = newUser === false ? \"Login to Play\" : \"Create Account\"\r\n    const promptText = newUser === false ? \"New User?\" : \"Existing User?\"\r\n    const promptOption = newUser !== false ? \"Login\" : \"Sign Up\"\r\n\r\n    const switchInput = () => {\r\n        setNewUser(!newUser)\r\n        setUsername('')\r\n        setPassword('')\r\n    } \r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <div className=\"loginDisplay\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h3>{inputTitle}</h3>\r\n                    <br/>\r\n                    <div className=\"loginField\">\r\n                    Username:&nbsp;\r\n                        <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        name=\"Username\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setUsername(target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"loginField\">\r\n                    Password:&nbsp;\r\n                        <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        size=\"12\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                    </div>\r\n                    <br/>\r\n                    <Button variant=\"secondary\" type=\"submit\">Submit</Button>\r\n                </form>\r\n                <br/>\r\n                <div className=\"toggleLoginSignUp\">\r\n                    <div>{promptText}</div>\r\n                    <Button variant=\"link\" style={{paddingTop: '0'}} onClick={switchInput}>{promptOption}</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import usersService from \"../services/users\";\r\n\r\nexport const getAllUsers = () => {\r\n    // usersService.getAll()\r\n    //       .then(res => setAllUsers(res))\r\n\r\n    return async dispatch => {\r\n        const data = await usersService.getAll()\r\n        dispatch({\r\n            type: 'GETALL',\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GETALL':\r\n      return action.data\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n\r\n//import anecdoteService from '../services/anecdotes'\r\n\r\n// const byVotes = (a1, a2) => a2.votes - a1.votes\r\n\r\n// const reducer = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case 'GETALL':\r\n//       return action.data.sort(byVotes)\r\n//     case 'VOTE':\r\n//       const voted = action.data\r\n//       return state.map(a => a.id===voted.id ? voted : a).sort(byVotes)\r\n//     case 'CREATE': \r\n//       return [...state, action.data]\r\n//     default: \r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export const createAnecdote = (content) => {\r\n//   return async dispatch => {\r\n//     const data = await anecdoteService.createNew(content)\r\n//     dispatch({\r\n//       type: 'CREATE',\r\n//       data\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const initializeAnecdotes = () => {\r\n//   return async dispatch => {\r\n//     const data = await anecdoteService.getAll()\r\n//     dispatch({\r\n//       type: 'INIT',\r\n//       data\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const voteAnecdote = (anecdote) => {\r\n//   return async dispatch => {\r\n//     const toVote = {...anecdote, votes: anecdote.votes + 1 }\r\n//     const data = await anecdoteService.update(toVote)\r\n//     dispatch({\r\n//       type: 'VOTE',\r\n//       data\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export default reducer","import resultsService from \"../services/results\"\r\n\r\nexport const setToken = (token) => {\r\n    return async dispatch => {\r\n    //const data = await anecdoteService.createNew(content)\r\n        await resultsService.setToken(token)\r\n        dispatch({\r\n        type: 'SETTOKEN'\r\n        })\r\n  }\r\n}\r\n\r\nconst reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n      case 'SETTOKEN':\r\n        return state\r\n      default: \r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default reducer","\r\nimport React, {useState, useEffect} from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Notification from \"./Notification\"\r\nimport LetterInput from \"./LetterInput\"\r\nimport Leaderboard from \"./Leaderboard\"\r\nimport UserCard from \"./UserCard\"\r\nimport Login from \"./Login\"\r\nimport { getAllUsers } from '../reducers/allUserReducer'\r\nimport { setToken } from '../reducers/resultReducer'\r\nimport { setCurrentUser } from '../reducers/currentUserReducer'\r\n\r\nconst Body = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(state => state.currentUser)\r\n\r\n    const [usersTopScore, setUsersTopScore ] = useState([])\r\n    const [totalTime, setTotalTime] = useState(\"\")\r\n    const [notifClass, setNotifClass] = useState('')\r\n    const [notifMessage, setNotifMessage] = useState('')\r\n \r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n        if (loggedUserJSON) {\r\n          const user = JSON.parse(loggedUserJSON)\r\n          dispatch(setCurrentUser(user))\r\n          dispatch(setToken(user.token))\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllUsers())\r\n    },[totalTime, dispatch])\r\n\r\n    const notification = (notifClass, notifMessage) => {\r\n        setNotifClass(notifClass)\r\n        setNotifMessage(notifMessage)\r\n        setTimeout(() => {\r\n            setNotifMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const loggedInDisplay = () => {\r\n        return(\r\n          <div className = \"mainContainer\">\r\n            <div className=\"left-display\">\r\n                <UserCard\r\n                    usersTopScore = {usersTopScore}\r\n                />\r\n            </div>\r\n            <div className=\"ctr-display\">\r\n                <LetterInput\r\n                    totalTime = {totalTime}\r\n                    setTotalTime = {setTotalTime}\r\n                /> \r\n            </div>\r\n            <div className = \"right-display\">\r\n                <Leaderboard\r\n                    totalTime = {totalTime}\r\n                    usersTopScore = {usersTopScore}\r\n                    setUsersTopScore = {setUsersTopScore}\r\n                />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"notifFlex\">\r\n                <Notification\r\n                    notifClass={notifClass}\r\n                    notifMessage={notifMessage}\r\n                />\r\n            </div>\r\n            \r\n            {\r\n                user ?\r\n                loggedInDisplay()\r\n                :\r\n                <Login\r\n                    notification={notification}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","\r\nconst Footer = () => {\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <small>\r\n                Copyright &copy; 2022 Benny Luo\r\n            </small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","\r\n//State Management (Redux) -> Notification\r\n//Testing (Cypress?)\r\n//Multi-view (i.e. About Page)\r\n\r\nimport React from 'react'\r\nimport Header from \"./components/Header\"\r\nimport Body from \"./components/Body\"\r\nimport Footer from \"./components/Footer\"\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Body/>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nexport const getTopScores = (data) => {\r\n    return async dispatch => {\r\n        console.log(\"allUsersInsideReducer\", data);\r\n        // console.log(data)\r\n        \r\n        dispatch({\r\n            type: 'GETALL',\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GETALL':\r\n      return action.data\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport allUsersReducer from './reducers/allUserReducer'\r\nimport currentUserReducer from './reducers/currentUserReducer'\r\nimport resultReducer from './reducers/resultReducer'\r\nimport topScoreReducer from './reducers/topScoresReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  currentUser: currentUserReducer,\r\n  users: allUsersReducer,\r\n  result: resultReducer,\r\n  topScore: topScoreReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  ))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}