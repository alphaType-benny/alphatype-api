{"version":3,"sources":["services/results.js","hooks/index.js","components/ResultInput.js","components/RecentGames.js","services/weather.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","resultService","postResult","result","post","then","useField","playerCount","useState","value","setValue","id","position","type","onChange","e","console","log","target","disabled","list","ResultInput","allResults","setResults","date","newDate","setPlayerCount","winner","second","third","fourth","onSubmit","event","preventDefault","newResult","Math","random","toFixed","asObject","concat","style","margin","textAlign","ToggleButtonGroup","className","name","map","r","idx","ToggleButton","variant","checked","p","padding","Button","RecentGames","recentResults","setRecentResults","sortedResults","sort","b","dateA","Date","useEffect","slice","g","cityName","weatherService","App","weatherData","setWeatherData","res","main","feels_like","floor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65c7b873.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/results'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return (response.data)\r\n}\r\n\r\nconst postResult = (result) => {\r\n  const request = axios.post(baseUrl, result)\r\n  return request.then(response => (response.data))\r\n}\r\n\r\nconst resultService = {getAll, postResult}\r\n\r\nexport default resultService","   \r\nimport { useState } from \"react\"\r\n\r\nexport const useField = (result, playerCount) => {\r\n  let [value, setValue] = useState(\"\")\r\n\r\n\tconst id = `${result}Input`\r\n\tconst position = result\r\n\tconst type = \"text\"\r\n  const list = \"roomates\"\r\n  let onChange = (e) => {\r\n    console.log(\"onChange\", e.target.value);\r\n    setValue(e.target.value)}\r\n\r\n  if (((result === \"fourth\" && (playerCount === \"2\" || playerCount === \"3\")) || \r\n    (result === \"third\" && playerCount === \"2\"))){\r\n\r\n      const disabled=\"disabled\"\r\n\r\n      if(value !== \"\"){\r\n        setValue(\"\")\r\n      }\r\n      \r\n      return{\r\n          position,\r\n          id,\r\n          type,\r\n          value,\r\n          disabled,\r\n          onChange\r\n      }\r\n  }\r\n\r\n  return {\r\n\t\tposition,\r\n\t\tid,\r\n\t\ttype,\r\n    value,\r\n    list,\r\n    onChange\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { useField } from \"../hooks/index.js\"\r\nimport resultService from '../services/results'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst ResultInput = ({ allResults, setResults }) => {\r\n    const [date, newDate] = useState('') \r\n    const [playerCount, setPlayerCount] = useState('4') \r\n  \r\n    const winner = useField('winner', playerCount)\r\n    const second = useField('second', playerCount)\r\n    const third = useField('third', playerCount)\r\n    const fourth = useField('fourth', playerCount)\r\n  \r\n    const numPlayerCount = ['2','3','4']\r\n    const playerNames = ['Abriel','Avery','Benny','Kelven','Mihir']\r\n  \r\n    //getId for local dev (db.json server)\r\n    const getId = () => (100000 * Math.random()).toFixed(0)\r\n    const asObject = (date, playerCount, winner) => {\r\n      return {\r\n        date,\r\n        playerCount,\r\n        winner,\r\n        id: getId()\r\n      }\r\n    }\r\n  \r\n    const addResult = (event) => {\r\n      event.preventDefault()\r\n  \r\n      const newResult = asObject(date, playerCount, winner.value)\r\n      resultService.postResult(newResult)\r\n        .then(setResults(allResults.concat(newResult)))\r\n    }\r\n    \r\n    return(\r\n      <div>\r\n        <h3>Add New Results</h3>\r\n          <form onSubmit={addResult}>\r\n            <table style={{margin: 'auto'}}>\r\n              <tbody>\r\n                <tr>\r\n                    <td># of Players:</td>\r\n                    <td style={{textAlign: 'center'}}>\r\n                      <ToggleButtonGroup className=\"mb-2\" name=\"playerCount\">\r\n                        {numPlayerCount.map((r, idx) => (\r\n                          <ToggleButton\r\n                            key={idx}\r\n                            id={`radio-${idx}`}\r\n                            type=\"radio\"\r\n                            variant=\"secondary\"\r\n                            name=\"radio\"\r\n                            value={r}\r\n                            checked={playerCount === r ? \"checked\" : \"\"}\r\n                            onChange={({target})=>{setPlayerCount(target.value)}}\r\n                          >\r\n                          {r}\r\n                          </ToggleButton>\r\n                      ))}\r\n                      </ToggleButtonGroup>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Winner</td>\r\n                  <td><input {...winner}/></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Second</td>\r\n                  <td><input {...second}/></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Third</td>\r\n                  <td><input {...third}/></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Fourth</td>\r\n                  <td><input {...fourth}/></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Date:</td>\r\n                  <td>\r\n                    <input\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      id='date'\r\n                      value={date}\r\n                      onChange={({target})=>newDate(target.value)}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n              \r\n            </table>\r\n            <datalist \r\n              id=\"roomates\">\r\n              {playerNames.map((p, idx) => (\r\n                <option\r\n                  key={idx} \r\n                  value={p}\r\n                />\r\n              ))}\r\n            </datalist>\r\n            <div style={{textAlign: 'center', padding:'10px'}}>\r\n              <Button type=\"submit\" variant=\"secondary\">Submit</Button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default ResultInput","import React, { useState,useEffect } from 'react'\r\n\r\nconst RecentGames = ({allResults}) => {\r\n    let [recentResults, setRecentResults] = useState([]) \r\n  \r\n    const sortedResults = allResults.sort((a, b) => {\r\n      var dateA = new Date(a.date);\r\n      var dateB = new Date(b.date);\r\n      return dateB - dateA;\r\n    })\r\n  \r\n    useEffect(()=>{\r\n      setRecentResults(sortedResults.slice(0,5))\r\n    },[allResults, sortedResults]) \r\n  \r\n    return(\r\n      <div>\r\n        <h3>Recent Races</h3>\r\n        <div style={{textAlign:'center'}}>\r\n          {\r\n            recentResults.map(g =>{\r\n              return(\r\n                <div key={g.id}>\r\n                  <b>{`Winner: ${g.winner}`}</b> {` - Game on ${g.date}`}\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default RecentGames","\r\nimport axios from 'axios'\r\n\r\n//Router? \r\n\r\nconst APIKey = \"e8bb8fb1042717249347617e4758b684\"\r\n\r\nconst get = async (cityName) => {\r\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${APIKey}&units=metric`)\r\n    return (response.data)\r\n  }\r\n\r\nconst weatherService = {get}\r\n\r\nexport default weatherService","import React, {useState, useEffect} from 'react'\r\nimport resultService from './services/results'\r\nimport ResultInput from './components/ResultInput'\r\nimport RecentGames from './components/RecentGames'\r\n\r\nimport weatherService from './services/weather'\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [allResults, setResults] = useState([])\r\n  const [weatherData, setWeatherData] = useState({})\r\n\r\n  useEffect(()=>{\r\n    resultService.getAll()\r\n      .then(res => setResults(res))\r\n    \r\n    weatherService.get(\"waterloo\")\r\n      .then(res => setWeatherData(res.main))\r\n\r\n  },[])\r\n\r\n  if (weatherData.feels_like){\r\n    console.log(\"Waterloo's Weather\", weatherData);\r\n  }\r\n  return (\r\n      <div className=\"container\" >\r\n        <div className='row' style={{textAlign: 'center'}}>\r\n          <h2>KABAM Mario Kart Charts</h2>\r\n          {weatherData.feels_like ? <p>Feels like {Math.floor(weatherData.feels_like)}deg C in Waterloo, ON</p>:\"\"}\r\n        </div>\r\n        <div className='row' >\r\n          <div className='col' >\r\n            <ResultInput\r\n              allResults={allResults}\r\n              setResults={setResults}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <RecentGames\r\n              allResults={allResults}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}